apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'

    loadConfiguration()

    def loadConfiguration() {
        def environment = hasProperty('env') ? env : 'dev'
        setProperty 'environment', environment
    }

apply from: 'tasks.gradle'

configurations {
  runtimeOnly
}


ext.springVersion='4.0.6.RELEASE'
ext.springSecurityVersion='3.2.5.RELEASE'
ext.hibernateVersion='4.3.6.Final'
ext.hibernateValidatorVersion='5.1.2.Final' 
 
version = '1.0'
 
// Uses JDK 8
sourceCompatibility = 1.7
targetCompatibility = 1.7
 
 
// 1. Get dependencies from Maven local repository
// 2. Get dependencies from Maven central repository
repositories {
	mavenLocal()
    mavenCentral()
}
 
//Project dependencies
dependencies {
	compile 'ch.qos.logback:logback-classic:1.1.2'
	compile 'org.springframework:spring-webmvc:4.0.0.RELEASE'
//	compile 'org.springframework.boot:spring-boot-starter-web:1.1.8.RELEASE'

	compile 'org.springframework:spring-test:4.0.0.RELEASE'

	runtimeOnly 'com.github.jsimone:webapp-runner:7.0.22.1'
    

// to run our App on Heroku
    //runtimeOnly "org.mortbay.jetty:jetty-runner:8.1.1.v20120215"
    // monitoring on Heroku
    //runtimeOnly "com.newrelic.agent.java:newrelic-agent:2.18.0"



	compile 'org.springframework.security:spring-security-web:3.2.5.RELEASE'
	compile 'org.springframework.security:spring-security-config:3.2.5.RELEASE'
	compile 'org.springframework.security:spring-security-taglibs:3.2.5.RELEASE'
	compile 'org.springframework.data:spring-data-jpa:1.7.0.RELEASE'

    // hibernate
    compile "org.hibernate:hibernate-entitymanager:$hibernateVersion"
    compile "org.hibernate:hibernate-core:$hibernateVersion"    
    compile "org.hibernate:hibernate-validator:$hibernateValidatorVersion"
    compile "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final"

    compile 'mysql:mysql-connector-java:5.1.33'
	compile 'javax.el:javax.el-api:3.0.0'
	compile 'commons-fileupload:commons-fileupload:1.2.1'
	compile 'jstl:jstl:1.2'


    compile group: 'org.apache.tiles', name: 'tiles-api', version:'3.0.5'
    compile(group: 'org.apache.tiles', name: 'tiles-core', version:'3.0.5') {
exclude(module: 'jcl-over-slf4j')
    }
    compile group: 'org.apache.tiles', name: 'tiles-jsp', version:'3.0.5'
    compile group: 'org.apache.tiles', name: 'tiles-servlet', version:'3.0.5'
    compile group: 'org.apache.tiles', name: 'tiles-template', version:'3.0.5'

compile 'javax.servlet:javax.servlet-api:3.0.1'
	//include in compile only, exclude in the war
	providedCompile 'javax.servlet:javax.servlet-api:3.0.1'
	providedCompile 'org.glassfish:javax.servlet.jsp:3.0.1'

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

eclipse {
    project.natures "org.springframework.ide.eclipse.core.springnature"
}

task stage(dependsOn: ['clean','copyProdConfiguration', 'war','copyToLib'])

stage {
	setProperty 'environment', 'prod'

}


task copyToLib << {
  copy {
    from configurations.runtimeOnly.copy().setTransitive(false)
    into "$buildDir/libs"
    rename { name ->
      def artifacts = configurations.runtimeOnly.resolvedConfiguration.resolvedArtifacts
      def artifact = artifacts.find { it.file.name == name }
      "${artifact.name}.${artifact.extension}"
    }
  }
}